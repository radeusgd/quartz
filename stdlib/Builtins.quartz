// special syntax for defining builtin +,*,-,/
defop (+) (a: Int, b: Int): Int = ???;
defop (-) (a: Int, b: Int): Int = ???;
defop (*) (a: Int, b: Int): Int = ???;
defop (/) (a: Int, b: Int): Int = ???;
defop <+> (a: String, b: String): String = ???;
defop == [t](a: t, b: t): Bool = ???;
defop <= (a: Int, b: Int): Bool = ???;
defop >= (a: Int, b: Int): Bool = ???;
defop < (a: Int, b: Int): Bool = ???;
defop > (a: Int, b: Int): Bool = ???;
def if_then_else[a](cond: Bool, tt: a, ff: a): a = ???;
def error[a](message: String): a = ???;
def toString[a](x: a): String = ???;
def print(msg: String): IO () = ???;
def readLine() : IO String = ???;
defop >>= [a][b](m: IO a, f: (a -> IO b)): IO b = ???;
/*
  ??? : Forall a. a
  limit : Forall a. Int -> a -> Maybe a
  return : Forall a. a -> IO a
 */
